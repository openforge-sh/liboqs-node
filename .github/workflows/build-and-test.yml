name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: [self-hosted, wasm]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get LibOQS commit hash
        id: liboqs-hash
        run: |
          LIBOQS_HASH=$(git ls-remote https://github.com/open-quantum-safe/liboqs.git refs/heads/main | cut -f1)
          echo "hash=$LIBOQS_HASH" >> $GITHUB_OUTPUT
          echo "LibOQS commit: $LIBOQS_HASH"

      - name: Cache WASM modules
        id: cache-wasm
        uses: actions/cache@v4
        with:
            path: dist/
            key: wasm-modules-${{ steps.liboqs-hash.outputs.hash }}-${{ hashFiles('build.sh', 'algorithms.json') }}
            restore-keys: |
              wasm-modules-${{ steps.liboqs-hash.outputs.hash }}-
              wasm-modules-

      - name: Install dependencies
        run: bun install

      - name: Build WASM modules
        if: steps.cache-wasm.outputs.cache-hit != 'true'
        run: bun run clean && bun run build
        env:
          PARALLEL_JOBS: 12

      - name: Save WASM modules to cache
        if: steps.cache-wasm.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: dist/
          key: wasm-modules-${{ steps.liboqs-hash.outputs.hash }}-${{ hashFiles('build.sh', 'algorithms.json') }}

      - name: Verify WASM modules completeness
        run: |
          set -euo pipefail
          # 97 algorithms total (32 KEM + 65 SIG), each with Node.js and Deno builds
          expected_count=97
          node_count=$(find dist/ -name "*.min.js" -type f | wc -l)
          deno_count=$(find dist/ -name "*.deno.js" -type f | wc -l)

          echo "Expected: $expected_count modules per runtime"
          echo "Node.js modules: $node_count"
          echo "Deno modules: $deno_count"


          if [ "$node_count" -ne "$expected_count" ]; then
            echo "::error::Node.js module count mismatch. Expected $expected_count, got $node_count"
            exit 1
          fi


          if [ "$deno_count" -ne "$expected_count" ]; then
            echo "::error::Deno module count mismatch. Expected $expected_count, got $deno_count"
            exit 1
          fi

          echo "âœ… All $expected_count Node.js and Deno modules verified"
      - name: Run tests
        run: bun run test

      - name: Run Deno tests
        run: deno test --allow-read --allow-write --allow-run --allow-env --no-check tests/deno/

      - name: Generate documentation
        run: bun run docs

      - name: Upload WASM modules artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: docs/
          retention-days: 7

  publish-npm:
    needs: build-and-test
    runs-on: [self-hosted, wasm]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Check if version already published
        id: check
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if npm view @openforge-sh/liboqs@$PACKAGE_VERSION version &>/dev/null; then
            echo "Version $PACKAGE_VERSION already published to npm"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Version $PACKAGE_VERSION not yet published"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure npm authentication
        if: steps.check.outputs.skip == 'false'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_API_KEY }}" >> ~/.npmrc

      - name: Publish to npm
        if: steps.check.outputs.skip == 'false'
        run: npm publish --access public

  deploy-docs:
    needs: build-and-test
    runs-on: [self-hosted, wasm]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: docs
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Download documentation artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: docs/

      - name: Prepare docs branch
        run: |
          # Remove everything except .git
          find . -mindepth 1 -maxdepth 1 ! -name '.git' ! -name 'docs' -exec rm -rf {} \;
          
      - name: Commit and push documentation
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update documentation from ${{ github.sha }}"
            git push origin docs
          fi